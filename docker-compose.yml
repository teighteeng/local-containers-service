version: '3.9'

name: ${PROJECT_NAME}

services:
  postgres:
    build:
      context: .docker
      dockerfile: postgres.dockerfile
    image: "${PROJECT_NAME}-postgres"
    container_name: "${PROJECT_NAME}_postgres"
    restart: always
    environment:
      POSTGRES_USER: ${MAIN_USER}
      POSTGRES_PASSWORD: ${MAIN_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - volume_postgres:/var/lib/postgresql/data
    networks:
      - network_service

  mysql:
    build:
      context: .docker
      dockerfile: mysql.dockerfile
    image: "${PROJECT_NAME}-mysql"
    command: --default-authentication-plugin=mysql_native_password
    container_name: "${PROJECT_NAME}_mysql"
    restart: always
    environment:
      MYSQL_USER: ${MAIN_USER}
      MYSQL_PASSWORD: ${MAIN_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MAIN_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - volume_mysql:/var/lib/mysql
    networks:
      - network_service

  mongo:
    build:
      context: .docker
      dockerfile: mongo.dockerfile
    image: "${PROJECT_NAME}-mongo"
    container_name: "${PROJECT_NAME}_mongo"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MAIN_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MAIN_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - volume_mongo:/data/db
    networks:
      - network_service

  redis:
    build:
      context: .docker
      dockerfile: redis.dockerfile
    image: "${PROJECT_NAME}-redis"
    container_name: "${PROJECT_NAME}_redis"
    restart: always
    ports:
      - 6379:6379
    volumes:
      - volume_redis:/data
    networks:
      - network_service

  php_apache:
    build:
      context: .docker
      dockerfile: php-apache.dockerfile
    image: "${PROJECT_NAME}-php_apache"
    container_name: "${PROJECT_NAME}_php_apache"
    restart: always
    ports:
      - 80:80
    volumes:
      - ./html:/var/www/html
    networks:
      - network_service

volumes:
  volume_postgres:
    name: "${PROJECT_NAME}-postgres"

  volume_mysql:
    name: "${PROJECT_NAME}-mysql"

  volume_mongo:
    name: "${PROJECT_NAME}-mongo"

  volume_redis:
    name: "${PROJECT_NAME}-redis"

networks:
  network_service:
    name: ${PROJECT_NAME}
